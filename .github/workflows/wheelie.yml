name: Wheelie

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_wheels:
    name: ${{ matrix.os }}-${{ matrix.distrover }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu
            distrover: bionic
            arch: amd64
          - os: ubuntu
            distrover: bionic
            arch: arm32v7
          - os: ubuntu
            distrover: bionic
            arch: arm64v8
          - os: ubuntu
            distrover: focal
            arch: amd64
          - os: ubuntu
            distrover: focal
            arch: arm32v7
          - os: ubuntu
            distrover: focal
            arch: arm64v8
          - os: alpine
            distrover: "3.13"
            arch: amd64
          - os: alpine
            distrover: "3.13"
            arch: arm32v7
          - os: alpine
            distrover: "3.13"
            arch: arm64v8

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      # https://github.com/crazy-max/ghaction-docker-buildx/issues/172
      - name: Hack Docker FS to Build cryptography on armv6/armv7
        run: |
          df -h
          sudo swapon --show
          sudo dd if=/dev/zero of=/swapfile1 bs=1M count=6K 
          sudo chmod 600 /swapfile1
          sudo mkswap /swapfile1
          sudo swapon /swapfile1
          sudo swapon --show
          sudo free -h
          sudo systemctl stop docker
          sudo mount -t tmpfs -o size=9G tmpfs /var/lib/docker
          df -h
          sudo systemctl start docker

      - name: Set up qemu
        run: |
          case ${{ matrix.arch }} in
            amd64)
              QEMU_ARCH=
              ;;
            arm32v7)
              QEMU_ARCH=arm
              ;;
            arm64v8)
              QEMU_ARCH=aarch64
              ;;
          esac
          if [ -n "${QEMU_ARCH}" ]; then
            docker rm $(docker create --volume qemu-user-static:/usr/bin multiarch/qemu-user-static:${QEMU_ARCH} dummy)
            docker run --rm --privileged --volume qemu-user-static:/usr/bin:ro multiarch/qemu-user-static:register --persistent yes
          fi

      - name: Build wheels in image
        run: |
          docker build -t ${{ matrix.os }}-${{ matrix.distrover }}-${{ matrix.arch }} --build-arg DISTRO=${{ matrix.os }} --build-arg DISTROVER=${{ matrix.distrover }} --build-arg ARCH=${{ matrix.arch }} .
          docker create --name ${{ matrix.os }}-${{ matrix.distrover }}-${{ matrix.arch }} ${{ matrix.os }}-${{ matrix.distrover }}-${{ matrix.arch }}
          mkdir -p build
          docker cp ${{ matrix.os }}-${{ matrix.distrover }}-${{ matrix.arch }}:/build build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.distrover }}-artifacts
          path: build/*

  upload_wheels:
    name: Upload wheels
    needs: build_wheels
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Do some tests
        run: |
          ls -al ubuntu* alpine*
